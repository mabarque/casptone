{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { Questions } from \"./questionIos\";\nimport { QuestionsA } from \"./questionAndroid\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar bioUrl = \"https://support.apple.com/en-ca/HT208109\";\nvar passUrl = \"https://support.apple.com/en-ca/HT204060\";\nvar safeChkUrl = \"https://support.apple.com/en-ca/guide/personal-safety/ips2aad835e1/web\";\nvar DeviceQuiz = function DeviceQuiz() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    showQuiz = _useState2[0],\n    setShowQuiz = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    iOSset = _useState4[0],\n    setiOSset = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    androidSet = _useState6[0],\n    setAndroidSet = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    chosenAnswer = _useState8[0],\n    setChosenAnswer = _useState8[1];\n  var _useState9 = useState(0),\n    _useState10 = _slicedToArray(_useState9, 2),\n    currentQuestion = _useState10[0],\n    setCurrentQuestion = _useState10[1];\n  var _useState11 = useState(0),\n    _useState12 = _slicedToArray(_useState11, 2),\n    selectedAnswer = _useState12[0],\n    setSelectedAnswer = _useState12[1];\n  var handleExit = function handleExit() {\n    setShowQuiz(false);\n    setCurrentQuestion(0);\n    setChosenAnswer(null);\n    setSelectedAnswer(0);\n    setAndroidSet(false);\n    setiOSset(false);\n  };\n  var handleAnswer = function handleAnswer(answer) {\n    setChosenAnswer(answer);\n    setSelectedAnswer(answer);\n  };\n  var handleNextQuestion = function handleNextQuestion() {\n    setCurrentQuestion(currentQuestion + 1);\n    setChosenAnswer(null);\n    setSelectedAnswer(-1);\n  };\n  var handleNextQuestionA = function handleNextQuestionA() {\n    setCurrentQuestion(currentQuestion + 1);\n    setChosenAnswer(null);\n    setSelectedAnswer(-1);\n  };\n  var question = iOSset ? Questions[currentQuestion] : QuestionsA[currentQuestion];\n  var id = question.id,\n    questionText = question.question,\n    answers = question.answers,\n    feedbacks = question.feedbacks;\n  var showFeedback = selectedAnswer !== -1;\n  if (!showQuiz) {\n    return _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        children: [_jsx(Text, {\n          style: styles.header,\n          children: \"Device Safety Features\"\n        }), _jsx(Text, {\n          style: styles.text,\n          children: \"Below is a guide on how to set your device to a maximum security level. Please click on the link that applies to the device you are using or wanting to secure\"\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: styles.startButton,\n        onPress: function onPress() {\n          setShowQuiz(true);\n          setiOSset(true);\n        },\n        children: _jsx(Text, {\n          style: {\n            color: 'black',\n            fontWeight: 'bold'\n          },\n          children: \"iOS\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.startButton,\n        onPress: function onPress() {\n          setShowQuiz(true);\n          setAndroidSet(true);\n        },\n        children: _jsx(Text, {\n          style: {\n            color: 'black',\n            fontWeight: 'bold'\n          },\n          children: \"Android\"\n        })\n      })]\n    });\n  }\n  ;\n  if (iOSset) {\n    return _jsxs(View, {\n      style: styles.containerInside,\n      children: [_jsx(View, {\n        children: _jsx(TouchableOpacity, {\n          style: styles.exitButton,\n          onPress: handleExit,\n          children: _jsx(AntDesign, {\n            name: \"arrowleft\",\n            size: 24,\n            color: \"black\"\n          })\n        })\n      }), _jsx(Text, {\n        style: [styles.header, {\n          marginTop: -40,\n          marginLeft: 40\n        }],\n        children: \"iOS\"\n      }), _jsxs(View, {\n        style: {\n          width: '100%',\n          height: '100%',\n          overflow: 'scroll'\n        },\n        children: [_jsx(Text, {\n          style: styles.question,\n          children: Questions[currentQuestion].question\n        }), question.answers.map(function (answer) {\n          return _jsx(TouchableOpacity, {\n            style: [styles.answerButton, chosenAnswer === answer.id && styles.chosenAnswer],\n            onPress: function onPress() {\n              handleAnswer(answer);\n              setSelectedAnswer(answer);\n            },\n            children: _jsxs(Text, {\n              style: styles.answerText,\n              children: [answer.id, \" - \", answer.text]\n            })\n          }, answer.id);\n        }), showFeedback && _jsx(View, {\n          style: styles.feedbackContainer,\n          children: _jsx(Text, {\n            style: styles.feedbackText,\n            children: selectedAnswer.feedback\n          })\n        }), currentQuestion !== Questions.length - 1 && _jsx(TouchableOpacity, {\n          style: styles.nextButton,\n          onPress: function onPress() {\n            return handleNextQuestionA();\n          },\n          children: _jsx(Text, {\n            style: styles.answerText,\n            children: \"Next Question\"\n          })\n        })]\n      })]\n    });\n  }\n  ;\n  if (androidSet) {\n    return _jsxs(View, {\n      style: styles.containerInside,\n      children: [_jsx(View, {\n        children: _jsx(TouchableOpacity, {\n          style: styles.exitButton,\n          onPress: handleExit,\n          children: _jsx(AntDesign, {\n            name: \"arrowleft\",\n            size: 24,\n            color: \"black\"\n          })\n        })\n      }), _jsx(Text, {\n        style: [styles.header, {\n          marginTop: -40,\n          marginLeft: 40\n        }],\n        children: \"Android\"\n      }), _jsxs(ScrollView, {\n        children: [_jsx(Text, {\n          style: styles.question,\n          children: Questions[currentQuestion].question\n        }), question.answers.map(function (answer) {\n          return _jsx(TouchableOpacity, {\n            style: [styles.answerButton, chosenAnswer === answer.id && styles.chosenAnswer],\n            onPress: function onPress() {\n              handleAnswer(answer);\n              setSelectedAnswer(answer);\n            },\n            children: _jsxs(Text, {\n              style: styles.answerText,\n              children: [answer.id, \" - \", answer.text]\n            })\n          }, answer.id);\n        }), showFeedback && _jsx(View, {\n          style: styles.feedbackContainer,\n          children: _jsx(Text, {\n            style: styles.feedbackText,\n            children: selectedAnswer.feedback\n          })\n        }), currentQuestion !== QuestionsA.length - 1 && _jsx(TouchableOpacity, {\n          style: styles.nextButton,\n          onPress: function onPress() {\n            return handleNextQuestion();\n          },\n          children: _jsx(Text, {\n            style: styles.answerText,\n            children: \"Next Question\"\n          })\n        })]\n      })]\n    });\n  }\n  ;\n};\nexport default DeviceQuiz;\nvar styles = {\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 20\n  },\n  containerInside: {\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    paddingHorizontal: 20,\n    paddingTop: 40,\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%'\n  },\n  header: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    textAlign: 'center'\n  },\n  text: {\n    fontSize: 18,\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n  startButton: {\n    backgroundColor: '#C3B1E1',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 10,\n    marginBottom: 20\n  },\n  nextButton: {\n    backgroundColor: '#C3B1E1',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 10,\n    marginTop: 20,\n    width: 160\n  },\n  exitButton: {\n    padding: 10,\n    marginRight: 20\n  },\n  question: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  answerButton: {\n    backgroundColor: '#E6E6FA',\n    padding: 10,\n    marginBottom: 10,\n    borderRadius: 10\n  },\n  chosenAnswer: {\n    backgroundColor: '#C3B1E1'\n  },\n  answerText: {\n    fontSize: 16\n  },\n  feedbackContainer: {\n    backgroundColor: 'lightgrey',\n    padding: 5\n  },\n  feedbackText: {\n    fontSize: 14\n  }\n};","map":{"version":3,"names":["React","useState","Pressable","Text","View","TouchableOpacity","Linking","ScrollView","AntDesign","Questions","QuestionsA","jsx","_jsx","jsxs","_jsxs","bioUrl","passUrl","safeChkUrl","DeviceQuiz","_useState","_useState2","_slicedToArray","showQuiz","setShowQuiz","_useState3","_useState4","iOSset","setiOSset","_useState5","_useState6","androidSet","setAndroidSet","_useState7","_useState8","chosenAnswer","setChosenAnswer","_useState9","_useState10","currentQuestion","setCurrentQuestion","_useState11","_useState12","selectedAnswer","setSelectedAnswer","handleExit","handleAnswer","answer","handleNextQuestion","handleNextQuestionA","question","id","questionText","answers","feedbacks","showFeedback","style","styles","container","children","header","text","startButton","onPress","color","fontWeight","containerInside","exitButton","name","size","marginTop","marginLeft","width","height","overflow","map","answerButton","answerText","feedbackContainer","feedbackText","feedback","length","nextButton","flex","alignItems","justifyContent","paddingHorizontal","paddingTop","position","top","left","fontSize","marginBottom","textAlign","backgroundColor","paddingVertical","borderRadius","padding","marginRight"],"sources":["/Users/mariabarqueroleitom/Desktop/webappcapstone/web-app/src/deviceonlinesafety.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Pressable, Text, View, TouchableOpacity, Linking, ScrollView, } from 'react-native';\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport { Questions } from './questionIos';\r\nimport { QuestionsA } from './questionAndroid';\r\n\r\nconst bioUrl = \"https://support.apple.com/en-ca/HT208109\";\r\nconst passUrl = \"https://support.apple.com/en-ca/HT204060\";\r\nconst safeChkUrl=\"https://support.apple.com/en-ca/guide/personal-safety/ips2aad835e1/web\"\r\n\r\nconst DeviceQuiz = () => {\r\n    const [showQuiz, setShowQuiz] = useState(false);\r\n    const [iOSset, setiOSset] = useState(false);\r\n    const [androidSet, setAndroidSet] = useState(false);\r\n    const [chosenAnswer, setChosenAnswer] = useState('');\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [selectedAnswer, setSelectedAnswer] = useState(0);\r\n  \r\n    const handleExit = () => {\r\n      setShowQuiz(false);\r\n      setCurrentQuestion(0);\r\n      setChosenAnswer(null);\r\n      setSelectedAnswer(0);\r\n      setAndroidSet(false);\r\n      setiOSset(false);\r\n    };\r\n  \r\n    const handleAnswer = (answer) => {\r\n      setChosenAnswer(answer);\r\n      setSelectedAnswer(answer);\r\n    };\r\n  \r\n    const handleNextQuestion = () => {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n      setChosenAnswer(null);\r\n      setSelectedAnswer(-1);\r\n    };\r\n    const handleNextQuestionA = () => {\r\n        setCurrentQuestion(currentQuestion + 1);\r\n        setChosenAnswer(null);\r\n        setSelectedAnswer(-1);\r\n      };\r\n\r\n    const question = iOSset ? Questions[currentQuestion] : QuestionsA[currentQuestion];\r\n    const { id, question: questionText, answers, feedbacks } = question;\r\n    const showFeedback = selectedAnswer !==-1;\r\n    \r\n\r\n\r\n    if (!showQuiz) {\r\n        return (\r\n            <View style={styles.container}>\r\n                <View>\r\n                    <Text style={styles.header}>Device Safety Features</Text>\r\n                    <Text style={styles.text}>Below is a guide on how to set your device to a maximum security level. Please click on the link that applies to the device you are using or wanting to secure</Text>\r\n                </View>\r\n                <TouchableOpacity style={styles.startButton} onPress={() => {setShowQuiz(true); setiOSset(true)}}>\r\n                    <Text style={{ color: 'black', fontWeight: 'bold' }}>iOS</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.startButton} onPress={() => {setShowQuiz(true); setAndroidSet(true)}}>\r\n                    <Text style={{ color: 'black', fontWeight: 'bold' }}>Android</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        ); };\r\n    \r\n    if (iOSset) {    \r\n        return(\r\n            <View style={styles.containerInside}>\r\n               <View>\r\n                    <TouchableOpacity style={styles.exitButton} onPress={handleExit}>\r\n                        <AntDesign name=\"arrowleft\" size={24} color=\"black\" />\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <Text style={[styles.header, {marginTop: -40, marginLeft: 40}]}>iOS</Text>\r\n                \r\n                <View style={{ width: '100%', height: '100%', overflow: 'scroll' }} >\r\n                    <Text style={styles.question}>{Questions[currentQuestion].question}</Text>\r\n                    {question.answers.map((answer) => (\r\n                    <TouchableOpacity\r\n                        key={answer.id}\r\n                        style={[styles.answerButton, chosenAnswer === answer.id && styles.chosenAnswer]}\r\n                        onPress={() => {\r\n                        handleAnswer(answer);\r\n                        setSelectedAnswer(answer);\r\n                        }}\r\n                    >\r\n                        <Text style={styles.answerText}>\r\n                        {answer.id} - {answer.text}\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                    ))}\r\n                    {showFeedback && (\r\n                    <View style={styles.feedbackContainer}>\r\n                        <Text style={styles.feedbackText}>{selectedAnswer.feedback}</Text>\r\n                    </View>\r\n                    )}\r\n                      {currentQuestion !== Questions.length - 1 && (\r\n                        <TouchableOpacity style={styles.nextButton} onPress={() => handleNextQuestionA()}>\r\n                        <Text style={styles.answerText}>Next Question</Text>\r\n                        </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n            </View>\r\n        );\r\n    };\r\n    if (androidSet) {    \r\n        return(\r\n            <View style={styles.containerInside}>\r\n              <View>\r\n                 <TouchableOpacity style={styles.exitButton} onPress={handleExit}>\r\n                     <AntDesign name=\"arrowleft\" size={24} color=\"black\" />\r\n                 </TouchableOpacity>\r\n             </View>\r\n             <Text style={[styles.header, {marginTop: -40, marginLeft: 40}]}>Android</Text>\r\n             \r\n             <ScrollView >\r\n                 <Text style={styles.question}>{Questions[currentQuestion].question}</Text>\r\n                 {question.answers.map((answer) => (\r\n                 <TouchableOpacity\r\n                     key={answer.id}\r\n                     style={[styles.answerButton, chosenAnswer === answer.id && styles.chosenAnswer]}\r\n                     onPress={() => {\r\n                     handleAnswer(answer);\r\n                     setSelectedAnswer(answer);\r\n                     }}\r\n                 >\r\n                     <Text style={styles.answerText}>\r\n                     {answer.id} - {answer.text}\r\n                     </Text>\r\n                 </TouchableOpacity>\r\n                 ))}\r\n                 {showFeedback && (\r\n                 <View style={styles.feedbackContainer}>\r\n                     <Text style={styles.feedbackText}>{selectedAnswer.feedback}</Text>\r\n                 </View>\r\n                 )}\r\n                   {currentQuestion !== QuestionsA.length - 1 && (\r\n                     <TouchableOpacity style={styles.nextButton} onPress={() => handleNextQuestion()}>\r\n                     <Text style={styles.answerText}>Next Question</Text>\r\n                     </TouchableOpacity>\r\n                 )}\r\n             </ScrollView>\r\n         </View>\r\n        );\r\n    };\r\n};\r\nexport default DeviceQuiz;\r\nconst styles = {\r\n    container: {\r\n      flex: 1,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      paddingHorizontal: 20,\r\n    },\r\n    containerInside: {\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',\r\n        paddingHorizontal: 20,\r\n        paddingTop: 40,\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%', \r\n    },\r\n    header: {\r\n      fontSize: 28,\r\n      fontWeight: 'bold',\r\n      marginBottom: 10,\r\n      textAlign: 'center',\r\n    },\r\n    text: {\r\n      fontSize: 18,\r\n      marginBottom: 20,\r\n      textAlign: 'center',\r\n    },\r\n    startButton: {\r\n      backgroundColor: '#C3B1E1',\r\n      paddingVertical: 10,\r\n      paddingHorizontal: 20,\r\n      borderRadius: 10,\r\n      marginBottom: 20,\r\n    },\r\n    nextButton: {\r\n        backgroundColor: '#C3B1E1',\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 20,\r\n        borderRadius: 10,\r\n        marginTop: 20,\r\n        width:160\r\n    },\r\n    exitButton: {\r\n        padding: 10,\r\n        marginRight:20,\r\n    },\r\n    question: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        marginBottom: 10,\r\n    },\r\n    answerButton: {\r\n    backgroundColor: '#E6E6FA',\r\n    padding: 10,\r\n    marginBottom: 10,\r\n    borderRadius:10,\r\n    },\r\n    chosenAnswer: {\r\n    backgroundColor: '#C3B1E1',\r\n    },\r\n    answerText: {\r\n    fontSize: 16,\r\n    },\r\n    feedbackContainer: {\r\n    backgroundColor: 'lightgrey',\r\n    padding:5\r\n    },\r\n    feedbackText: {\r\n    fontSize: 14,\r\n    },\r\n  };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}